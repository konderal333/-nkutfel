library("readxl")
library(dplyr)
library(tidyverse)
library(writexl)
my_data_2019 <- read_excel("C:/Users/Donát/Documents/GitHub/-nkutfel/data_2019_clean.xlsx")
zh0_2019 <- read_excel("C:/Users/kolle/Downloads/VBK_matematika_nulladik_zh_2019-09-13.xlsx")
my_data_2019 <- read_excel("C:/Users/Donát/OneDrive/Documents/GitHub/-nkutfel/data_2019_clean.xlsx")
my_data_2019 <- read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/data_2019_clean.xlsx")
my_data_2019 <- read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/data_2019_cleaned.xlsx")
merged_2021 = inner_join(my_data_2019, zh0_2019, by = c("Name" = "Név"))
View(merged_2021)
merged_2021 = merged_2021[, c(-12,-13,-14,-15)]
View(merged_2021)
felvpont_2019 <- read_excel("C:/Users/kolle/Downloads/Felvettek_listáj_2019A.xlsx")
felvpont_2019 <- read_excel("C:/Users/kolle/Downloads/Felvettek_listája_2019A.xlsx")
felvpont_2019 <- read_excel("C:/Users/kolle/Downloads/Felvettek listája 2019A.xlsx")
View(merged_2021)
View(felvpont_2019)
merged_2021_elso = inner_join(my_data_2019, zh0_2019, by = c("Name" = "Név"))
merged_2021 = inner_join(merged_2021_elso, felvpont_2019, by = c("Name" = "Név"))
View(merged_2021)
merged_2021 = merged_2021[, c(-12,-13,-14,-15)] #első táblából való felesleges attribútumok kiszűrése
View(merged_2021)
merged_2021 = merged_2021[, c(-13,-14,-20,-21,-22,-23,-24)]
my_data_2019 <- read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/data_2019_cleaned.xlsx")
zh0_2019 <- read_excel("C:/Users/kolle/Downloads/VBK_matematika_nulladik_zh_2019-09-13.xlsx")
felvpont_2019 <- read_excel("C:/Users/kolle/Downloads/Felvettek listája 2019A.xlsx")
merged_2019_elso = inner_join(my_data_2019, zh0_2019, by = c("Name" = "Név"))
merged_2019 = inner_join(merged_2019_elso, felvpont_2019, by = c("Name" = "Név"))
merged_2019 = merged_2019[, c(-12,-13,-14,-15)] #első táblából való felesleges attribútumok kiszűrése
merged_2019 = merged_2019[, c(-13,-14,-20,-21,-22,-23,-24)]
merged_2019 = merged_2019[, c(-"Törzspont")
merged_2019 = merged_2019[, c(-"Törzspont")]
merged_2019 = merged_2019[, c(-"Törzspont")]
merged_2019 = merged_2019[, c(-16)]
View(merged_2019)
#faktorizáljuk a kategorikus változókat
merged_2019$Szak = as.factor(merged_2019$Szak)
merged_2019$`12_ora_tipus` = as.factor(merged_2019$`12_ora_tipus`)
#faktorizáljuk a kategorikus változókat
merged_2019$Szak = as.factor(merged_2019$Szak)
#binárissá, amit érdemes
merged_2021 <- merged_2021 %>%
mutate(Mat_term_tag = recode(Mat_term_tag, "Igen" = 1, "Nem" = 0),
Emelt = recode(Emelt, "Igen" = 1, "Nem" = 0))
#binárissá, amit érdemes
merged_2019 <- merged_2019 %>%
mutate(Mat_term_tag = recode(Mat_term_tag, "Igen" = 1, "Nem" = 0),
Emelt = recode(Emelt, "Igen" = 1, "Nem" = 0))
write_xlsx(merged_2021,"C:/Users/Donát/Documents/GitHub/-nkutfel/2019_merged_with_zh_clean.xlsx")
write_xlsx(merged_2019,"C:/Users/Donát/Documents/GitHub/-nkutfel/2019_merged_with_zh_clean.xlsx")
write_xlsx(merged_2019,"C:/Users/Donát/OneDrive/Documents/GitHub/-nkutfel/2019_merged_with_zh_clean.xlsx")
write_xlsx(merged_2019,"C:/Users/kolle/OneDrive/Documents/GitHub/-nkutfel/2019_merged_with_zh_clean.xlsx")
write_xlsx(merged_2019,"C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/2019_merged_with_zh_clean.xlsx")
#beolvasás és mergelés
my_data_2021 <- read_excel("C:/Users/Donát/Documents/GitHub/-nkutfel/data_2021_merged_clean.xlsx")
zh0_2021 <- read_excel("C:/Users/kolle/Downloads/VBK_ZH0_eredmenyek_210917.xlsx")
felvpont_2021 <- read_excel("C:/Users/kolle/Downloads/Felvettek listája 2021A.xlsx")
felvpont_2021 <- read_excel("C:/Users/kolle/Downloads/Felvettek 2021A.xlsx")
merged_2021_elso = inner_join(my_data_eredeti, zh0_2021, by = c("Name" = "Név"))
merged_2021_elso = inner_join(my_data_2021, zh0_2021, by = c("Name" = "Név"))
#beolvasás és mergelés
my_data_2021 <- read_excel("C:/Users/kolle/OneDrive/Documents/GitHub/-nkutfel/data_2021_merged_clean.xlsx")
#beolvasás és mergelés
my_data_2021 <- read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/data_2021_merged_clean.xlsx")
merged_2021_elso = inner_join(my_data_2021, zh0_2021, by = c("Name" = "Név"))
merged_2021 = inner_join(merged_2021_elso, felvpont_2021, by = c("Name" = "Név") )
merged_2021 = merged_2021[, c(-22,-23,-24,-25)]
my_data_2021 <- read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/data_2021_merged_clean.xlsx")
zh0_2021 <- read_excel("C:/Users/kolle/Downloads/VBK_ZH0_eredmenyek_210917.xlsx")
felvpont_2021 <- read_excel("C:/Users/kolle/Downloads/Felvettek 2021A.xlsx")
merged_2021_elso = inner_join(my_data_2021, zh0_2021, by = c("Name" = "Név"))
merged_2021 = inner_join(merged_2021_elso, felvpont_2021, by = c("Name" = "Név") )
View(merged_2021_elso)
View(merged_2021)
merged_2021 = merged_2021[, c(,-36,-37,-38,-39,-40)]
merged_2021 = merged_2021[, c(-36,-37,-38,-39,-40)]
merged_2021 = merged_2021[, c(-26,-28,-29,-30,-35)]
merged_2021 = merged_2021[, c(-22,-23,-24,-25)]
merged_2021 = merged_2021[, c(-10)]
#faktorizáljuk a kategorikus változókat
merged_2021$Szak = as.factor(merged_2021$Szak)
merged_2021$`12_ora_tipus` = as.factor(merged_2021$`12_ora_tipus`)
#binárissá, amit érdemes
merged_2021 <- merged_2021 %>%
mutate(Mat_term_tag = recode(Mat_term_tag, "Igen" = 1, "Nem" = 0),
Emelt = recode(Emelt, "Igen" = 1, "Nem" = 0))
write_xlsx(merged_2021,"C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel2021_merged_with_zh_clean.xlsx")
write_xlsx(merged_2019,"C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/2019_merged_with_zh_clean.xlsx")
write_xlsx(merged_2021,"C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/2021_merged_with_zh_clean.xlsx")
#2020-as adatok
my_data_2020 <- read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/data_2020_cleaned.xlsx")
#2020-as adatok
my_data_2020 <- read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/data_2020_cleaned.xlsx")
library("readxl")
library(dplyr)
library(tidyverse)
library(writexl)
#2020-as adatok
my_data_2020 <- read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/data_2020_cleaned.xlsx")
felvpont_2020 <- read_excel("C:/Users/kolle/Downloads/Felvettek 2020A.xlsx")
merged_2021 <- inner_join(my_data_2020, felvpont_2020, by = c("Name" == "Név"))
merged_2021 <- inner_join(my_data_2020, felvpont_2020, by = c("Name" = "Név"))
merged_2020 <- inner_join(my_data_2020, felvpont_2020, by = c("Name" = "Név"))
#2020-as adatok
my_data_2020 <- read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/data_2020_cleaned.xlsx")
felvpont_2020 <- read_excel("C:/Users/kolle/Downloads/Felvettek 2020A.xlsx")
merged_2020 <- inner_join(my_data_2020, felvpont_2020, by = c("Name" = "Név"))
View(merged_2020)
merged_2021 = merged_2021[, c(-27,-28,-29,-30,-31)]
merged_2020 = merged_2020[, c(-27,-28,-29,-30,-31)]
merged_2020 = merged_2020[, c(-21,-25)]
#faktorizáljuk a kategorikus változókat
merged_2020$Szak = as.factor(merged_2020$Szak)
merged_2020$`12_ora_tipus` = as.factor(merged_2020$`12_ora_tipus`)
#binárissá, amit érdemes
merged_2019 <- merged_2019 %>%
mutate(Mat_term_tag = recode(Mat_term_tag, "Igen" = 1, "Nem" = 0),
Emelt = recode(Emelt, "Igen" = 1, "Nem" = 0),
TEHETSÉGGONDOZÓ = recode(TEHETSÉGGONDOZÓ, "IGEN" = 1, "NEM" = 0),
FELZÁRKÓZÁS = recode(FELZÁRKÓZÁS, "IGEN" = 1, "NEM" = 0))
merged_2020 <- merged_2020 %>%
mutate(Mat_term_tag = recode(Mat_term_tag, "Igen" = 1, "Nem" = 0),
Emelt = recode(Emelt, "Igen" = 1, "Nem" = 0),
TEHETSÉGGONDOZÓ = recode(TEHETSÉGGONDOZÓ, "IGEN" = 1, "NEM" = 0),
FELZÁRKÓZÁS = recode(FELZÁRKÓZÁS, "IGEN" = 1, "NEM" = 0))
write_xlsx(merged_2020,"C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/2020_merged_with_zh_clean.xlsx")
library("readxl")
library(dplyr)
library(tidyverse)
library(writexl)
altkem_2020 = read_excel("C:/Users/kolle/Downloads/BevÁltKém_ÁltKémGyak2020.xlsx")
merged_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/2020_merged_without_zh_clean.xlsx")
View(altkem_2020)
altkem_2020 = read_excel("C:/Users/kolle/Downloads/BevÁltKém_ÁltKémGyak2020.xlsx", sheet = 3)
View(altkem_2020)
altkem_2020 = altkem_2020[, c(1,7,8)]
colnames(altkem_2020)
merged_2020_with_altkem = inner_join(merged_2020, altkem_2020, by = c("Name" = "Hallgató nyomtatási neve"))
View(merged_2020_with_altkem)
altkem_2020_bio = read_excel("C:/Users/kolle/Downloads/BevÁltKém_ÁltKémGyak2020.xlsx", sheet = 3)
altkem_2020_vegyesz = read_excel("C:/Users/kolle/Downloads/BevÁltKém_ÁltKémGyak2020.xlsx", sheet = 4)
merged_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/2020_merged_without_zh_clean.xlsx")
altkem_2020_vegyesz = altkem_2020_vegyesz[, c(1,7,8)]
altkem_2020_bio = altkem_2020_bio[, c(1,7,8)]
altkem_2020 = rbind(altkem_2020_bio, altkem_2020_vegyesz)
View(altkem_2020_bio)
View(altkem_2020_vegyesz)
altkem_2020 = rbind(altkem_2020_bio, altkem_2020_vegyesz)
View(altkem_2020_vegyesz)
View(altkem_2020_bio)
colnames(altkem_2020_vegyesz)
altkem_2020_bio = read_excel("C:/Users/kolle/Downloads/BevÁltKém_ÁltKémGyak2020.xlsx", sheet = 3)
altkem_2020_vegyesz = read_excel("C:/Users/kolle/Downloads/BevÁltKém_ÁltKémGyak2020.xlsx", sheet = 4)
merged_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/2020_merged_without_zh_clean.xlsx")
altkem_2020_vegyesz = altkem_2020_vegyesz[, c(1,7,8)]
altkem_2020_bio = altkem_2020_bio[, c(1,7,8)]
altkem_2020 = rbind(altkem_2020_bio, altkem_2020_vegyesz)
View(altkem_2020)
merged_2020_with_altkem = inner_join(merged_2020, altkem_2020, by = c("Name" = "Hallgató nyomtatási neve"))
View(merged_2020_with_altkem)
rename(merged_2020_with_altkem, pontszám = Ált.kém.pont)
rename(merged_2020_with_altkem, Ált.kém.pont = pontszám)
View(altkem_2020)
View(merged_2020_with_altkem)
merged_2020_with_altkem %>%
rename(Ált.kém.pont = pontszám)
View(merged_2020_with_altkem)
names(merged_2020_with_altkem)[names(merged_2020_with_altkem) == "pontszám"] <- "Ált.kém pontszám"
View(merged_2020_with_altkem)
write_xlsx(merged_2020_with_altkem,"C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020.xlsx")
library("readxl")
library(dplyr)
library(tidyverse)
library(rpart)
library(caret)
library(rpart.plot)
library("class")
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020.xlsx")
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
#releváns oszlopok kiválasztása, illetve faktorizáció
kemdata = my_data_2020[, c(-1,-2,-5,-8,-10,-17,-24,-25)]
kemdata$Szak = as.factor(kemdata$Szak)
kemdata$X12_ora_tipus = as.factor(kemdata$X12_ora_tipus)
kemdata$Születési.dátum = as.Date(kemdata$Születési.dátum, "%Y-%m-%d")
kemdata$Tanulmányi.pont = as.numeric(kemdata$Tanulmányi.pont)
kemdata$Érettségi.pont = as.numeric(kemdata$Érettségi.pont)
kemdata$Többletpont = as.numeric(kemdata$Többletpont)
#kemdata$jegy = sapply(kemdata$jegy, function(n){n%/%4})
kemdata = kemdata[, c(-5)]
View(kemdata)
set.seed(20)
ind <- sample(2, nrow(kemdata), replace=TRUE, prob=c(0.70, 0.30))
data.training = kemdata[ind==1, ]
data.test = kemdata[ind==2, ]
altkemtree <- rpart( jegy ~ ., data = data.training, method = "class")
rpart.plot(altkemtree)
View(my_data_2020)
#lineáris regresszió jegyre
library("readxl")
library(dplyr)
library(tidyverse)
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020.xlsx")
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
View(my_data_2020)
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020 idővel.xlsx")
View(my_data_2020)
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
View(my_data_2020)
my_data_2020 = my_data_2020[, c(4,5, 10:20, 21:27)]
View(my_data_2020)
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020 idővel.xlsx")
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
View(my_data_2020)
#távolítsuk el a nem numerikus változókat
my_data_2020 = my_data_2020[, c(4,5, 10:20, 22:27)]
View(my_data_2020)
#most a redundáns változókat távolítsuk el
my_data_2020 = my_data_2020[, c(-4,-11, -17, -18)]
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020 idővel.xlsx")
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
#távolítsuk el a nem numerikus változókat
kemdata = my_data_2020[, c(4,5, 10:20, 22:27)]
#most a redundáns változókat távolítsuk el
kemdata = kemdata[, c(-4,-11, -17, -18)]
regression <- lm(kémiapont ~ ., data = kemdata)
regression <- lm(jegy ~ ., data = kemdata)
summary(regression)
#lineáris regresszió jegyre
library("readxl")
library(dplyr)
library(tidyverse)
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020 idővel.xlsx")
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
#távolítsuk el a nem numerikus változókat
kemdata = my_data_2020[, c(4,5, 10:20, 22:27)]
#most a redundáns változókat távolítsuk el
kemdata = kemdata[, c(-4,-11, -17, -19)]
regression <- lm(kémiapont ~ ., data = kemdata)
summary(regression)
install.packages("leaps")
library(leaps)
Best_Subset <-
regsubsets(kémiapont~.,
data =kemdata,
nbest = 1,      # 1 best model for each number of predictors
nvmax = NULL,    # NULL for no limit on number of variables
force.in = NULL, force.out = NULL,
method = "exhaustive")
summary_best_subset <- summary(regsubsets.out)
as.data.frame(summary_best_subset$outmat)
Best_Subset <-regsubsets(kémiapont~.,
data =kemdata,
nbest = 1,      # 1 best model for each number of predictors
nvmax = NULL,    # NULL for no limit on number of variables
force.in = NULL, force.out = NULL,
method = "exhaustive")
summary_best_subset <- summary(Best_Subset.out)
View(Best_Subset)
summary(Best_Subset)
summary(regression)
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020 idővel.xlsx")
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
#távolítsuk el a nem numerikus változókat
kemdata = my_data_2020[, c(4,5, 10:20, 22:27)]
#most a redundáns változókat távolítsuk el
kemdata = kemdata[, c(-4,-11, -17, -18)]
regression <- lm(jegy ~ ., data = kemdata)
summary(regression)
View(kemdata)
library("readxl")
library(dplyr)
library(tidyverse)
library(rpart)
library(caret)
library(rpart.plot)
library("class")
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020.xlsx")
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
#releváns oszlopok kiválasztása, illetve faktorizáció
kemdata = my_data_2020[, c(-1,-2,-8,-10,-17,-24,-25)]
kemdata$Szak = as.factor(kemdata$Szak)
kemdata$X12_ora_tipus = as.factor(kemdata$X12_ora_tipus)
kemdata$Tankör = as.factor(kemdata$Tankör)
kemdata$Születési.dátum = as.Date(kemdata$Születési.dátum, "%Y-%m-%d")
kemdata$Tanulmányi.pont = as.numeric(kemdata$Tanulmányi.pont)
kemdata$Érettségi.pont = as.numeric(kemdata$Érettségi.pont)
kemdata$Többletpont = as.numeric(kemdata$Többletpont)
#kemdata$jegy = sapply(kemdata$jegy, function(n){n%/%4})
kemdata = kemdata[, c(-6)]
set.seed(20)
ind <- sample(2, nrow(kemdata), replace=TRUE, prob=c(0.70, 0.30))
data.training = kemdata[ind==1, ]
data.test = kemdata[ind==2, ]
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Szak == 'Vegyészmérnöki'), method = "class")
rpart.plot(altkemtree)
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Szak == 'Biomérnöki'), method = "class")
rpart.plot(altkemtree)
altkemtree <- rpart( jegy ~ ., data = data.training, method = "class")
rpart.plot(altkemtree)
library("readxl")
library(dplyr)
library(tidyverse)
library(rpart)
library(caret)
library(rpart.plot)
library("class")
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020.xlsx")
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
#releváns oszlopok kiválasztása, illetve faktorizáció
kemdata = my_data_2020[, c(-1,-2,-5,-8,-10,-17,-24,-25)]
kemdata$Szak = as.factor(kemdata$Szak)
kemdata$X12_ora_tipus = as.factor(kemdata$X12_ora_tipus)
kemdata$Születési.dátum = as.Date(kemdata$Születési.dátum, "%Y-%m-%d")
kemdata$Tanulmányi.pont = as.numeric(kemdata$Tanulmányi.pont)
kemdata$Érettségi.pont = as.numeric(kemdata$Érettségi.pont)
kemdata$Többletpont = as.numeric(kemdata$Többletpont)
#kemdata$jegy = sapply(kemdata$jegy, function(n){n%/%4})
kemdata = kemdata[, c(-5)]
set.seed(20)
ind <- sample(2, nrow(kemdata), replace=TRUE, prob=c(0.70, 0.30))
data.training = kemdata[ind==1, ]
data.test = kemdata[ind==2, ]
altkemtree <- rpart( jegy ~ ., data = data.training, method = "class")
rpart.plot(altkemtree)
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Szak == 'Vegyészmérnöki') method = "class")
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Szak = 'Vegyészmérnöki') method = "class")
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Szak == 'Vegyészmérnöki'), method = "class")
rpart.plot(altkemtree)
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Szak == 'Biomérnöki'), method = "class")
rpart.plot(altkemtree)
View(kemdata)
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Emelt == 1), method = "class")
rpart.plot(altkemtree)
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Emelt == 0), method = "class")
rpart.plot(altkemtree)
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Emelt == 1), method = "class")
rpart.plot(altkemtree)
set.seed(10)
ind <- sample(2, nrow(kemdata), replace=TRUE, prob=c(0.70, 0.30))
data.training = kemdata[ind==1, ]
data.test = kemdata[ind==2, ]
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Emelt == 1), method = "class")
rpart.plot(altkemtree)
ind <- sample(2, nrow(kemdata), replace=TRUE, prob=c(0.70, 0.30))
ind <- sample(2, nrow(kemdata), replace=TRUE, prob=c(0.70, 0.30))
data.training = kemdata[ind==1, ]
data.test = kemdata[ind==2, ]
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Emelt == 1), method = "class")
rpart.plot(altkemtree)
ind <- sample(2, nrow(kemdata), replace=TRUE, prob=c(0.70, 0.30))
data.training = kemdata[ind==1, ]
data.test = kemdata[ind==2, ]
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Emelt == 1), method = "class")
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Emelt == 0), method = "class")
rpart.plot(altkemtree)
library("e1071")
library("e1071")
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020.xlsx")
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
#releváns oszlopok kiválasztása, illetve faktorizáció
kemdata = my_data_2020[, c(-1,-2,-5,-8,-10,-17,-24,-25)]
kemdata$Szak = as.factor(kemdata$Szak)
kemdata$X12_ora_tipus = as.factor(kemdata$X12_ora_tipus)
kemdata$Születési.dátum = as.Date(kemdata$Születési.dátum, "%Y-%m-%d")
kemdata$Tanulmányi.pont = as.numeric(kemdata$Tanulmányi.pont)
kemdata$Érettségi.pont = as.numeric(kemdata$Érettségi.pont)
kemdata$Többletpont = as.numeric(kemdata$Többletpont)
#kemdata$jegy = sapply(kemdata$jegy, function(n){n%/%4})
kemdata = kemdata[, c(-5)]
ind <- sample(2, nrow(kemdata), replace=TRUE, prob=c(0.70, 0.30))
data.training = kemdata[ind==1, ]
data.test = kemdata[ind==2, ]
altkemtree <- rpart( jegy ~ ., data = data.training, method = "class")
rpart.plot(altkemtree)
prediction = predict(altkemtree, data.test, type="class")
result = (prediction != data.test$jegy)
result = as.factor(prediction != data.test$jegy)
result = c(prediction != data.test$jegy)
View(result)
prediction = as.vector(predict(altkemtree, data.test, type="class"))
prediction = predict(altkemtree, data.test, type="class")
result = as.factor(prediction != data.test$jegy)
sum(result)
result = as.numeric(as.factor(prediction != data.test$jegy))
sum(result)
Vegyészmérnöki
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Szak == 'Vegyészmérnöki'), method = "class")
rpart.plot(altkemtree)
prediction = predict(altkemtree, subset(data.test,Szak == 'Vegyészmérnöki'), type="class")
result = as.numeric(as.factor(prediction != subet(data.test, Szak == 'Vegyészmérnöki')$jegy))
result = as.numeric(as.factor(prediction != subset(data.test, Szak == 'Vegyészmérnöki')$jegy))
sum(result)
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Szak == 'Biomérnöki'), method = "class")
rpart.plot(altkemtree)
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Szak == 'Biomérnöki'), method = "class")
rpart.plot(altkemtree)
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Szak == 'Biomérnöki'), method = "class")
rpart.plot(altkemtree)
prediction = predict(altkemtree, subset(data.test,Szak == 'Biomérnöki'), type="class")
result = as.numeric(as.factor(prediction != subset(data.test, Szak == 'Biomérnöki')$jegy))
sum(result)
altkemtree <- rpart( jegy ~ ., data = subset(data.training, Szak == 'Biomérnöki'), method = "class")
rpart.plot(altkemtree)
prediction = predict(altkemtree, subset(data.test,Szak == 'Biomérnöki'), type="class")
result = as.numeric(as.factor(prediction = subset(data.test, Szak == 'Biomérnöki')$jegy))
result = as.numeric(as.factor(prediction == subset(data.test, Szak == 'Biomérnöki')$jegy))
sum(result)
#lineáris regresszió jegyre
library("readxl")
library(dplyr)
library(tidyverse)
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020 idővel.xlsx")
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
#távolítsuk el a nem numerikus változókat
kemdata = my_data_2020[, c(4,5, 10:20, 22:27)]
#most a redundáns változókat távolítsuk el
kemdata = kemdata[, c(-4,-11, -17, -18)]
regression <- lm(jegy ~ ., data = kemdata)
summary(regression)
plot(regression$resid~kemdata$Érettségi.pont[order(kemdata$Érettségi.pont)])
View(regression)
library("readxl")
library(dplyr)
library(tidyverse)
library(rpart)
library(caret)
library(rpart.plot)
library("class")
library("e1071")
my_data_2020 = read_excel("C:/Users/kolle/OneDrive/Dokumentumok/GitHub/-nkutfel/Áltkémes zh nélküli 2020.xlsx")
names(my_data_2020)[names(my_data_2020) == "Ált.kém pontszám"] <- "kémiapont"
colnames(my_data_2020) <- make.names(colnames(my_data_2020))
#releváns oszlopok kiválasztása, illetve faktorizáció
kemdata = my_data_2020[, c(-1,-2,-8,-10,-17,-24,-25)]
kemdata$Szak = as.factor(kemdata$Szak)
kemdata$X12_ora_tipus = as.factor(kemdata$X12_ora_tipus)
kemdata$Tankör = as.factor(kemdata$Tankör)
kemdata$Születési.dátum = as.Date(kemdata$Születési.dátum, "%Y-%m-%d")
kemdata$Tanulmányi.pont = as.numeric(kemdata$Tanulmányi.pont)
kemdata$Érettségi.pont = as.numeric(kemdata$Érettségi.pont)
kemdata$Többletpont = as.numeric(kemdata$Többletpont)
#kemdata$jegy = sapply(kemdata$jegy, function(n){n%/%4})
kemdata = kemdata[, c(-6)]
set.seed(20)
ind <- sample(2, nrow(kemdata), replace=TRUE, prob=c(0.70, 0.30))
data.training = kemdata[ind==1, ]
data.test = kemdata[ind==2, ]
altkemtree <- rpart( jegy ~ ., data = data.training, method = "class")
rpart.plot(altkemtree)
rpart.plot(altkemtree)
